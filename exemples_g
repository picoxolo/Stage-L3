import numpy as np
import main as mp
import exemples_k as ex
import retrouver_g as rtg
import matplotlib.pyplot as plt
import pickle

with open("data.pkl", "rb") as f:
    data_loaded = pickle.load(f)

def id(x):
    return(x)

rtg.plot_g_exp(rtg.retrouver_g(data_loaded["tab_phi"],rtg.proba_exp(id(data_loaded["u_conv_tpce"]),5,1001),5,1001),5,1001,id,"g(x) = x")


def id2(x):
    return(2*x)

rtg.plot_g_exp(rtg.retrouver_g(data_loaded["tab_phi"](5,10001),rtg.proba_exp(id2(data_loaded["u_conv_tpce"]),5,1001),5,1001),5,1001,id2,"g(x) = 2x")


def x3(x):
    return(x**3)

rtg.plot_g_exp(rtg.retrouver_g(data_loaded["tab_phi"],rtg.proba_exp(x3(data_loaded["u_conv_tpce"]),5,1001),5,1001),5,1001,x3,"g(x)=x^3")


def seuil(x):
    if x>0:
        return(1)
    return(0)
seuil_vect = np.vectorize(seuil)

rtg.plot_g_exp(rtg.retrouver_g(data_loaded["tab_phi"],rtg.proba_exp(seuil_vect(data_loaded["u_conv_tpce"]),5,1001),5,1001)
               ,5,1001,seuil_vect,"seuil")


'''
data = {
    "wh": ex.wh,
    "k_carre_petit_conv_norme": ex.k_carre_petit_conv_norme,
    "u_conv_pca": ex.u_conv_pca,
    "k_carre_grand_conv_norme": ex.k_carre_grand_conv_norme,
    "u_conv_gca": ex.u_conv_gca,
    "k_cer_tres_petit_conv_norme":ex.k_cer_tres_petit_conv_norme,
    "u_conv_tpce":ex.u_conv_tpce,
    "k_cer_petit_conv_norme":ex.k_cer_petit_conv_norme,
    "u_conv_pce":ex.u_conv_pce,
    "k_cer_grand_conv_norme":ex.k_cer_grand_conv_norme,
    "u_conv_gce":ex.u_conv_gce,
    "k_dirac_conv_norme":ex.k_dirac_conv_norme,
    "u_conv_dirac":ex.u_conv_dirac,
    "tab_phi":rtg.tab_phi(5,1000000)
}

# Ã‰criture (mode binaire)
#with open("data.pkl", "wb") as f:
#    pickle.dump(data, f)
'''
